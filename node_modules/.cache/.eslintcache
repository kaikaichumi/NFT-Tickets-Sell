[{"F:\\conda\\nft_tickets\\nft-boneboss\\src\\index.js":"1","F:\\conda\\nft_tickets\\nft-boneboss\\src\\App.js":"2","F:\\conda\\nft_tickets\\nft-boneboss\\src\\components\\Banner.js":"3","F:\\conda\\nft_tickets\\nft-boneboss\\src\\components\\NavBar.js":"4","F:\\conda\\nft_tickets\\nft-boneboss\\src\\components\\Footer.js":"5","F:\\conda\\nft_tickets\\nft-boneboss\\src\\utils\\interact.js":"6","F:\\conda\\nft_tickets\\nft-boneboss\\src\\components\\MailchimpForm.js":"7","F:\\conda\\nft_tickets\\nft-boneboss\\src\\components\\Newsletter.js":"8","F:\\conda\\nft_tickets\\nft-boneboss\\src\\components\\Projects.js":"9","F:\\conda\\nft_tickets\\nft-boneboss\\src\\components\\ProjectCard.js":"10","F:\\conda\\nft_tickets\\nft-boneboss\\src\\utils\\ImgurUpload.js":"11","F:\\conda\\nft_tickets\\nft-boneboss\\src\\components\\smtp.js":"12","F:\\conda\\nft_tickets\\nft-tickets-sell\\src\\index.js":"13","F:\\conda\\nft_tickets\\nft-tickets-sell\\src\\App.js":"14","F:\\conda\\nft_tickets\\nft-tickets-sell\\src\\components\\NavBar.js":"15","F:\\conda\\nft_tickets\\nft-tickets-sell\\src\\components\\Banner.js":"16","F:\\conda\\nft_tickets\\nft-tickets-sell\\src\\utils\\interact.js":"17"},{"size":291,"mtime":1678345015924,"results":"18","hashOfConfig":"19"},{"size":484,"mtime":1686681079838,"results":"20","hashOfConfig":"19"},{"size":8163,"mtime":1686755212266,"results":"21","hashOfConfig":"19"},{"size":5173,"mtime":1686795932626,"results":"22","hashOfConfig":"19"},{"size":1813,"mtime":1679661988765,"results":"23","hashOfConfig":"19"},{"size":7583,"mtime":1686738060901,"results":"24","hashOfConfig":"19"},{"size":612,"mtime":1678345015922,"results":"25","hashOfConfig":"19"},{"size":1795,"mtime":1679493979321,"results":"26","hashOfConfig":"19"},{"size":3520,"mtime":1679661583590,"results":"27","hashOfConfig":"19"},{"size":380,"mtime":1679661582800,"results":"28","hashOfConfig":"19"},{"size":257,"mtime":1681462630360,"results":"29","hashOfConfig":"19"},{"size":899,"mtime":1686681908656,"results":"30","hashOfConfig":"19"},{"size":291,"mtime":1678345015924,"results":"31","hashOfConfig":"32"},{"size":484,"mtime":1686681079838,"results":"33","hashOfConfig":"32"},{"size":4377,"mtime":1686926578181,"results":"34","hashOfConfig":"32"},{"size":9523,"mtime":1686931923821,"results":"35","hashOfConfig":"32"},{"size":7583,"mtime":1686738060901,"results":"36","hashOfConfig":"32"},{"filePath":"37","messages":"38","suppressedMessages":"39","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},"v8ea3o",{"filePath":"41","messages":"42","suppressedMessages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"44","messages":"45","suppressedMessages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"47","messages":"48","suppressedMessages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"50","messages":"51","suppressedMessages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"53","messages":"54","suppressedMessages":"55","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"56","messages":"57","suppressedMessages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},{"filePath":"60","messages":"61","suppressedMessages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"63","messages":"64","suppressedMessages":"65","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"66","messages":"67","suppressedMessages":"68","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"69","messages":"70","suppressedMessages":"71","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"72","messages":"73","suppressedMessages":"74","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":null},{"filePath":"75","messages":"76","suppressedMessages":"77","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},"39twj5",{"filePath":"79","messages":"80","suppressedMessages":"81","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"82","messages":"83","suppressedMessages":"84","errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85"},{"filePath":"86","messages":"87","suppressedMessages":"88","errorCount":0,"fatalErrorCount":0,"warningCount":17,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89"},{"filePath":"90","messages":"91","suppressedMessages":"92","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},"F:\\conda\\nft_tickets\\nft-boneboss\\src\\index.js",[],[],[],"F:\\conda\\nft_tickets\\nft-boneboss\\src\\App.js",[],[],"F:\\conda\\nft_tickets\\nft-boneboss\\src\\components\\Banner.js",["93","94","95","96","97","98","99","100","101","102","103","104","105"],["106","107","108"],"F:\\conda\\nft_tickets\\nft-boneboss\\src\\components\\NavBar.js",["109","110","111","112","113"],[],"F:\\conda\\nft_tickets\\nft-boneboss\\src\\components\\Footer.js",["114","115","116"],[],"F:\\conda\\nft_tickets\\nft-boneboss\\src\\utils\\interact.js",[],[],"F:\\conda\\nft_tickets\\nft-boneboss\\src\\components\\MailchimpForm.js",[],[],[],"F:\\conda\\nft_tickets\\nft-boneboss\\src\\components\\Newsletter.js",[],[],"F:\\conda\\nft_tickets\\nft-boneboss\\src\\components\\Projects.js",[],[],"F:\\conda\\nft_tickets\\nft-boneboss\\src\\components\\ProjectCard.js",[],[],"F:\\conda\\nft_tickets\\nft-boneboss\\src\\utils\\ImgurUpload.js",[],[],"F:\\conda\\nft_tickets\\nft-boneboss\\src\\components\\smtp.js",["117"],["118","119","120","121","122","123","124","125","126","127"],"F:\\conda\\nft_tickets\\nft-tickets-sell\\src\\index.js",[],[],[],"F:\\conda\\nft_tickets\\nft-tickets-sell\\src\\App.js",[],[],"F:\\conda\\nft_tickets\\nft-tickets-sell\\src\\components\\NavBar.js",["128","129","130","131","132","133","134","135","136"],[],"import React, { useState, useEffect } from \"react\";\r\nimport { Navbar, Nav, Container } from \"react-bootstrap\";\r\nimport navIcon1 from '../assets/img/nav-icon1.svg';\r\nimport navIcon2 from '../assets/img/nav-icon2.svg';\r\nimport navIcon3 from '../assets/img/nav-icon3.svg';\r\nimport navIcon4 from \"../assets/img/nav-icon4.svg\";\r\nimport navIcon5 from \"../assets/img/OpenSea_icon.png\";\r\nimport navIcon6 from \"../assets/img/nav-icon6.svg\";\r\nimport { connectWallet, getCurrentWalletConnected } from \"../utils/interact\";\r\nimport { CopyToClipboard } from \"react-copy-to-clipboard\";\r\nimport { BrowserRouter as Router } from \"react-router-dom\";\r\n\r\nconst NavBar = ({ signOut }) => {\r\n  //Navbar list\r\n  const [activeLink, setActiveLink] = useState(\"home\")\r\n  const [scrolled, setScrolled] = useState(false)\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n\r\n  useEffect(() => {\r\n    //Navbar scroll\r\n    function onScroll() {\r\n      if (window.scrollY > 50) {\r\n        setScrolled(true);\r\n      } else {\r\n        setScrolled(false);\r\n      }\r\n    }\r\n    //walletAddressListener is used switch address \r\n    async function walletListener() {\r\n      //TODO: implement\r\n      const { address, status } = await getCurrentWalletConnected();\r\n      setWallet(address);\r\n      setStatus(status);\r\n      addWalletListener();\r\n    }\r\n    walletListener();\r\n    window.addEventListener(\"scroll\", onScroll);\r\n\r\n    return () => window.removeEventListener(\"scroll\", onScroll);\r\n  }, []);\r\n\r\n \r\n\r\n  //Wallet\r\n  const [walletAddress, setWallet] = useState(\"\");\r\n  const [status, setStatus] = useState(\"\");\r\n\r\n  function addWalletListener() {\r\n    if (window.ethereum) {\r\n      window.ethereum.on(\"accountsChanged\", (accounts) => {\r\n        if (accounts.length > 0) {\r\n          setWallet(accounts[0]);\r\n          setStatus(\"The web3 is connected!\");\r\n        } else {\r\n          setWallet(\"\");\r\n          setStatus(\"🦊 Connect to Metamask using the top right button.\");\r\n        }\r\n      });\r\n    } else {\r\n      setStatus(\r\n        <p>\r\n          {\" \"}\r\n          🦊{\" \"}\r\n          <a\r\n            target=\"_blank\"\r\n            href={`https://metamask.io/download.html`}\r\n            rel=\"noreferrer\"\r\n          >\r\n            You must install Metamask, a virtual Ethereum wallet, in your\r\n            browser.\r\n          </a>\r\n        </p>\r\n      );\r\n    }\r\n  }\r\n\r\n\r\n\r\n  const connectWalletPressed = async () => {\r\n    //TODO: implement\r\n    const walletResponse = await connectWallet();\r\n    setStatus(walletResponse.status);\r\n    setWallet(walletResponse.address);\r\n    console.log(status)\r\n  };\r\n  return (\r\n    <Router>\r\n      <Navbar expand=\"md\" className={scrolled ? \"scrolled\" : \"\"}>\r\n        <Container>\r\n          <Navbar.Brand href=\"/\">\r\n            <Nav className=\"LOGO\">NFT tickets Sell</Nav>\r\n          </Navbar.Brand>\r\n          <Navbar.Toggle aria-controls=\"basic-navbar-nav\">\r\n            <span className=\"navbar-toggler-icon\"></span>\r\n          </Navbar.Toggle>\r\n          <Navbar.Collapse id=\"basic-navbar-nav\">\r\n            <Nav className=\"ms-auto\">\r\n              \r\n              {/* <Nav.Link\r\n                href=\"#projects\"\r\n                className={\r\n                  activeLink === \"projects\"\r\n                    ? \"active navbar-link\"\r\n                    : \"navbar-link\"\r\n                }\r\n                onClick={() => onUpdateActiveLink(\"projects\")}\r\n              >\r\n                NFT Collections\r\n              </Nav.Link> */}\r\n            </Nav>\r\n            <span className=\"navbar-text\">\r\n              <div className=\"social-icon\">\r\n              <a\r\n                  href=\"https://testnets.opensea.io/\"\r\n                  target=\"_blank\"\r\n                  title=\"Opensea\"\r\n                  rel=\"noreferrer\"\r\n                >\r\n                  <img src={navIcon5} alt=\"\" />\r\n                </a>\r\n                \r\n                \r\n                <a\r\n                  href=\"https://kaikaichumi.github.io/NFT-Tickets-Sell/\"\r\n                  target=\"_blank\"\r\n                  title=\"GitHub\"\r\n                  rel=\"noreferrer\"\r\n                >\r\n                  <img src={navIcon4} alt=\"\" />\r\n                </a>\r\n                \r\n                \r\n              </div>\r\n              \r\n            </span>\r\n          </Navbar.Collapse>\r\n        </Container>\r\n      </Navbar>\r\n    </Router>\r\n  );\r\n};\r\n\r\n\r\nexport default NavBar;","F:\\conda\\nft_tickets\\nft-tickets-sell\\src\\components\\Banner.js",["137","138","139","140","141","142","143","144","145","146","147","148","149","150","151","152","153"],["154","155"],"import { useState, useEffect, useRef } from \"react\";\r\nimport { Container, Row, Col, Navbar, Nav, } from \"react-bootstrap\";\r\nimport { ArrowRightCircle, QrCode } from 'react-bootstrap-icons';\r\nimport 'animate.css';\r\nimport TrackVisibility from 'react-on-screen';\r\nimport { mintNFT, verifyNFT, nftused, tokenURI ,totalSupply} from \"../utils/interact.js\";\r\nimport QRCodeStyling from \"qr-code-styling\";\r\nimport qr_logo from \"../assets/img/qr_logo.png\";\r\nimport emailjs from \"emailjs-com\";\r\nimport React from 'react';\r\nimport { connectWallet, getCurrentWalletConnected } from \"../utils/interact\";\r\nimport { CopyToClipboard } from \"react-copy-to-clipboard\";\r\n\r\n\r\n\r\n\r\n\r\nexport const Banner = () => {\r\n  const [loopNum, setLoopNum] = useState(0);\r\n  const [isDeleting, setIsDeleting] = useState(false);\r\n  const [text, setText] = useState(\"\");\r\n  const [delta, setDelta] = useState(300 - Math.random() * 100);\r\n  // eslint-disable-next-line no-unused-vars\r\n  const [index, setIndex] = useState(1);\r\n  const toRotate = [\"BlockChain\", \"NFT Developer\", \"Web3 Developer\"];\r\n  const period = 2000;\r\n\r\n \r\n\r\n  const serviceID = 'service_ht3538';\r\n  const templateID = 'template_3j0swxb';\r\n  const public_key = 'hHDC_0ICfYvN290Ae';\r\n\r\n  //qrcode url setting\r\n  // const onUrlChange = (event) => {\r\n  //   setUrl(event);\r\n  // };\r\n\r\n  // const onDownloadClick = () => {\r\n  //   onUrlChange(totalSupplyOfcall());\r\n  //   qrCode.download({\r\n  //     extension: fileExt\r\n  //   });\r\n  // };  \r\n  //qrcode\r\n   \r\n  //email\r\n  const email_send = async () => {\r\n    var tokenid = await totalSupplyOfcall();\r\n    var img_url = '<img src=\"https://api.qrserver.com/v1/create-qr-code/?data='+tokenid+'&amp;size=200x200\" alt=\"QRcode error\" />';\r\n    console.log(tokenid)\r\n    const emailParams = {\r\n      to_name: \"kaikai\",\r\n      to_email: \"karta2398980@gmail.com\",\r\n      qr_html: img_url,\r\n    };\r\n    console.log(img_url)\r\n    emailjs.send(serviceID, templateID, emailParams, public_key)\r\n        .then((result) => {\r\n            console.log(result);    \r\n        }, (error) => {\r\n            console.log(error)\r\n        })\r\n  };\r\n\r\n  //email\r\n\r\n\r\n  //qrcode 掃描\r\n  const [data, setData] = useState('No result');\r\n  var QRdata = 'No result';\r\n  //qrcode 驗證\r\n  const QRdata_verify = async (data) => {\r\n    if (QRdata != data){//判斷data是否被改變\r\n      QRdata = data;\r\n      if (await OwnerOfcall(data) == true){\r\n        onVerify(data);\r\n      };\r\n    }\r\n  }\r\n  \r\n  \r\n\r\n  useEffect(() => {\r\n    let ticker = setInterval(() => {\r\n      tick();\r\n    }, delta);\r\n\r\n    return () => clearInterval(ticker);\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [text]);\r\n\r\n  const tick = () => {\r\n    let i = loopNum % toRotate.length;\r\n    let fullText = toRotate[i];\r\n    let updatedText = isDeleting\r\n      ? fullText.substring(0, text.length - 1)\r\n      : fullText.substring(0, text.length + 1);\r\n\r\n    setText(updatedText);\r\n\r\n    if (isDeleting) {\r\n      setDelta((prevDelta) => prevDelta / 2);\r\n    }\r\n\r\n    if (!isDeleting && updatedText === fullText) {\r\n      setIsDeleting(true);\r\n      setIndex((prevIndex) => prevIndex - 1);\r\n      setDelta(period);\r\n    } else if (isDeleting && updatedText === \"\") {\r\n      setIsDeleting(false);\r\n      setLoopNum(loopNum + 1);\r\n      setIndex(1);\r\n      setDelta(500);\r\n    } else {\r\n      setIndex((prevIndex) => prevIndex + 1);\r\n    }\r\n  };\r\n  \r\n\r\n\r\n\r\n  //mintNFT\r\n  const [count, setcount] = useState(1);\r\n  const onMint = async () => {\r\n    setcount(1);\r\n    console.log(count);\r\n    const { success, status } = await mintNFT(count);\r\n    console.log(status);\r\n    alert(status);\r\n    if (success) {\r\n      alert(`購票資訊已送出。\\n姓名：${name}\\n電話：${phone}\\nEmail：${email}\\n請至Email查收您的入場QRcode`);\r\n      email_send();\r\n    }else {\r\n      alert(\"購票失敗!\");\r\n    }\r\n\r\n  };\r\n\r\n  //verify nft \r\n  \r\n  var tokenId = \"\";\r\n  \r\n  const onVerify = async (data) => {\r\n    // 👇 \"inputRef.current.value\" is input value\r\n    tokenId = data;\r\n    console.log(tokenId);\r\n    if (tokenId < 0 || tokenId > 100) {\r\n      console.log(\"Please input tokenId for the range 0~99.\");\r\n      alert(\"Please input tokenId for the range 0~99.\");\r\n    } else {\r\n      const { status } = await verifyNFT(tokenId);\r\n      console.log(status);\r\n      alert(status);\r\n    }\r\n  };\r\n\r\n  //nftused return(uint256)\r\n  const OwnerOfcall = async(data)=>{\r\n    tokenId = data;\r\n    console.log(tokenId);\r\n    if (tokenId < 0 || tokenId > 100) {\r\n      console.log(\"Please input tokenId for the range 0~99.\");\r\n      alert(\"Please input tokenId for the range 0~99.\");\r\n      return false;\r\n    } else {\r\n      \r\n      const { status, success} = await nftused(tokenId);\r\n      console.log(status);\r\n      console.log(success);\r\n      console.log(success.toString());\r\n      const baseuri = await tokenURICall(data);\r\n      fetch(baseuri)\r\n        .then((response) => response.json())\r\n        .then((json) => alert(status+\"\\n\"+json.image));\r\n      return success;\r\n    }\r\n    \r\n  }\r\n  //totalSupply return(uint256)\r\n  const totalSupplyOfcall = async()=>{\r\n    const { status } = await totalSupply();\r\n    console.log(status);\r\n    //alert(parseInt(status.toString())-1);\r\n    return parseInt(status.toString())-1;\r\n  }\r\n  \r\n\r\n  //tokenURI\r\n  const tokenURICall = async(data)=>{\r\n    tokenId = data;\r\n    if (tokenId < 0 || tokenId > 100) {\r\n      console.log(\"Please input tokenId for the range 0~99.\");\r\n      alert(\"Please input tokenId for the range 0~99.\");\r\n    } else {\r\n      const { status } = await tokenURI(tokenId);\r\n      //console.log(status);\r\n      //alert(status);\r\n    return status;\r\n    }\r\n  }\r\n\r\n\r\n\r\n  const [name, setName] = useState('');\r\n  const [phone, setPhone] = useState('');\r\n  const [email, setEmail] = useState('');\r\n\r\n\r\n\r\n\r\n\r\n  ////////////////////////////////////////////////////////////////\r\n  const [scrolled, setScrolled] = useState(false)\r\n  // eslint-disable-next-line react-hooks/exhaustive-deps\r\n\r\nuseEffect(() => {\r\n  //Navbar scroll\r\n  function onScroll() {\r\n    if (window.scrollY > 50) {\r\n      setScrolled(true);\r\n    } else {\r\n      setScrolled(false);\r\n    }\r\n  }\r\n  //walletAddressListener is used switch address \r\n  async function walletListener() {\r\n    //TODO: implement\r\n    const { address, status } = await getCurrentWalletConnected();\r\n    setWallet(address);\r\n    setStatus(status);\r\n    addWalletListener();\r\n  }\r\n  walletListener();\r\n  window.addEventListener(\"scroll\", onScroll);\r\n\r\n  return () => window.removeEventListener(\"scroll\", onScroll);\r\n}, []);\r\n\r\n\r\n\r\n//Wallet\r\nconst [walletAddress, setWallet] = useState(\"\");\r\nconst [status, setStatus] = useState(\"\");\r\n\r\nfunction addWalletListener() {\r\n  if (window.ethereum) {\r\n    window.ethereum.on(\"accountsChanged\", (accounts) => {\r\n      if (accounts.length > 0) {\r\n        setWallet(accounts[0]);\r\n        setStatus(\"The web3 is connected!\");\r\n      } else {\r\n        setWallet(\"\");\r\n        setStatus(\"🦊 Connect to Metamask using the top right button.\");\r\n      }\r\n    });\r\n  } else {\r\n    setStatus(\r\n      <p>\r\n        {\" \"}\r\n        🦊{\" \"}\r\n        <a\r\n          target=\"_blank\"\r\n          href={`https://metamask.io/download.html`}\r\n          rel=\"noreferrer\"\r\n        >\r\n          You must install Metamask, a virtual Ethereum wallet, in your\r\n          browser.\r\n        </a>\r\n      </p>\r\n    );\r\n  }\r\n}\r\n\r\n\r\n\r\nconst connectWalletPressed = async () => {\r\n  //TODO: implement\r\n  const walletResponse = await connectWallet();\r\n  setStatus(walletResponse.status);\r\n  setWallet(walletResponse.address);\r\n  console.log(status)\r\n};\r\n  ////////////////////////////////////////////////////////////////\r\n\r\n\r\n\r\n  //提交購票資訊\r\n  const handleSubmit = () => {\r\n    if(walletAddress && walletAddress.length > 0){\r\n      onMint();\r\n    }else{\r\n      alert(`購票資訊已送出。\\n姓名：${name}\\n電話：${phone}\\nEmail：${email}`);\r\n    }\r\n    \r\n    \r\n  };\r\n\r\n  return (\r\n    <section className=\"banner\" id=\"home\">\r\n      <Container>\r\n      <div className=\"App\" align=\"center\">\r\n      <h1>購票系統</h1>\r\n      \r\n        <label>\r\n          姓名：\r\n          <input\r\n            type=\"text\"\r\n            value={name}\r\n            onChange={(event) => setName(event.target.value)}\r\n          />\r\n        </label>\r\n        <br />\r\n        <label>\r\n          電話：\r\n          <input\r\n            type=\"tel\"\r\n            value={phone}\r\n            onChange={(event) => setPhone(event.target.value)}\r\n          />\r\n        </label>\r\n        <br />\r\n        <label>\r\n          Email：\r\n          <input\r\n            type=\"email\"\r\n            value={email}\r\n            onChange={(event) => setEmail(event.target.value)}\r\n          />\r\n        </label>\r\n        \r\n        \r\n        <br />\r\n\r\n\r\n              \r\n              <div text={walletAddress} title=\"Copy Wallet address\">\r\n                <button className=\"connectwallet\" onClick={connectWalletPressed} >\r\n                  <span>\r\n                    {walletAddress && walletAddress.length > 0\r\n                      ? `已連結錢包: ${walletAddress.substring(\r\n                          0,\r\n                          6\r\n                        )}...${walletAddress.substring(38)}`\r\n                      : \"點擊以連結錢包\"}\r\n                  </span>\r\n                </button>\r\n              </div>\r\n\r\n\r\n        <div>\r\n\r\n          <button onClick={handleSubmit}>確認購買</button>\r\n        </div>\r\n        \r\n    </div>\r\n      </Container>\r\n    </section>\r\n  );\r\n}\r\n\r\n","F:\\conda\\nft_tickets\\nft-tickets-sell\\src\\utils\\interact.js",[],[],{"ruleId":"156","severity":1,"message":"157","line":1,"column":31,"nodeType":"158","messageId":"159","endLine":1,"endColumn":37},{"ruleId":"156","severity":1,"message":"160","line":3,"column":28,"nodeType":"158","messageId":"159","endLine":3,"endColumn":34},{"ruleId":"156","severity":1,"message":"161","line":5,"column":8,"nodeType":"158","messageId":"159","endLine":5,"endColumn":23},{"ruleId":"156","severity":1,"message":"162","line":6,"column":10,"nodeType":"158","messageId":"159","endLine":6,"endColumn":17},{"ruleId":"156","severity":1,"message":"163","line":9,"column":8,"nodeType":"158","messageId":"159","endLine":9,"endColumn":15},{"ruleId":"156","severity":1,"message":"164","line":14,"column":7,"nodeType":"158","messageId":"159","endLine":14,"endColumn":13},{"ruleId":"156","severity":1,"message":"165","line":44,"column":10,"nodeType":"158","messageId":"159","endLine":44,"endColumn":19},{"ruleId":"156","severity":1,"message":"166","line":45,"column":9,"nodeType":"158","messageId":"159","endLine":45,"endColumn":18},{"ruleId":"156","severity":1,"message":"167","line":46,"column":9,"nodeType":"158","messageId":"159","endLine":46,"endColumn":19},{"ruleId":"156","severity":1,"message":"168","line":47,"column":9,"nodeType":"158","messageId":"159","endLine":47,"endColumn":19},{"ruleId":"169","severity":1,"message":"170","line":98,"column":16,"nodeType":"171","messageId":"172","endLine":98,"endColumn":18},{"ruleId":"169","severity":1,"message":"173","line":100,"column":35,"nodeType":"171","messageId":"172","endLine":100,"endColumn":37},{"ruleId":"156","severity":1,"message":"174","line":200,"column":9,"nodeType":"158","messageId":"159","endLine":200,"endColumn":26},{"ruleId":"156","severity":1,"message":"175","line":36,"column":10,"nodeType":"158","messageId":"159","endLine":36,"endColumn":15,"suppressions":"176"},{"ruleId":"177","severity":1,"message":"178","line":115,"column":6,"nodeType":"179","endLine":115,"endColumn":12,"suggestions":"180","suppressions":"181"},{"ruleId":"182","severity":2,"message":"183","line":233,"column":5,"nodeType":"184","messageId":"185","endLine":233,"endColumn":21,"suppressions":"186"},{"ruleId":"156","severity":1,"message":"187","line":3,"column":8,"nodeType":"158","messageId":"159","endLine":3,"endColumn":16},{"ruleId":"156","severity":1,"message":"188","line":5,"column":8,"nodeType":"158","messageId":"159","endLine":5,"endColumn":16},{"ruleId":"156","severity":1,"message":"189","line":8,"column":8,"nodeType":"158","messageId":"159","endLine":8,"endColumn":16},{"ruleId":"156","severity":1,"message":"190","line":15,"column":10,"nodeType":"158","messageId":"159","endLine":15,"endColumn":20},{"ruleId":"156","severity":1,"message":"191","line":15,"column":22,"nodeType":"158","messageId":"159","endLine":15,"endColumn":35},{"ruleId":"156","severity":1,"message":"187","line":4,"column":8,"nodeType":"158","messageId":"159","endLine":4,"endColumn":16},{"ruleId":"156","severity":1,"message":"188","line":6,"column":8,"nodeType":"158","messageId":"159","endLine":6,"endColumn":16},{"ruleId":"156","severity":1,"message":"189","line":9,"column":8,"nodeType":"158","messageId":"159","endLine":9,"endColumn":16},{"ruleId":"192","severity":1,"message":"193","line":1,"column":1,"nodeType":"194","messageId":"172","fix":"195"},{"ruleId":"182","severity":2,"message":"183","line":3,"column":73,"nodeType":"184","messageId":"185","endLine":3,"endColumn":140,"suppressions":"196"},{"ruleId":"197","severity":1,"message":"198","line":3,"column":120,"nodeType":"199","messageId":"200","endLine":3,"endColumn":121,"suppressions":"201"},{"ruleId":"182","severity":2,"message":"183","line":3,"column":328,"nodeType":"184","messageId":"185","endLine":3,"endColumn":480,"suppressions":"202"},{"ruleId":"197","severity":1,"message":"198","line":3,"column":399,"nodeType":"199","messageId":"200","endLine":3,"endColumn":400,"suppressions":"203"},{"ruleId":"182","severity":2,"message":"183","line":3,"column":551,"nodeType":"184","messageId":"185","endLine":3,"endColumn":629,"suppressions":"204"},{"ruleId":"197","severity":1,"message":"198","line":3,"column":619,"nodeType":"199","messageId":"200","endLine":3,"endColumn":620,"suppressions":"205"},{"ruleId":"206","severity":1,"message":"207","line":3,"column":678,"nodeType":"208","messageId":"209","endLine":3,"endColumn":696,"fix":"210","suppressions":"211"},{"ruleId":"206","severity":1,"message":"207","line":3,"column":793,"nodeType":"208","messageId":"209","endLine":3,"endColumn":811,"fix":"212","suppressions":"213"},{"ruleId":"214","severity":2,"message":"215","line":3,"column":797,"nodeType":"158","messageId":"216","endLine":3,"endColumn":811,"suppressions":"217"},{"ruleId":"197","severity":1,"message":"198","line":3,"column":834,"nodeType":"199","messageId":"200","endLine":3,"endColumn":835,"suppressions":"218"},{"ruleId":"156","severity":1,"message":"187","line":3,"column":8,"nodeType":"158","messageId":"159","endLine":3,"endColumn":16},{"ruleId":"156","severity":1,"message":"219","line":4,"column":8,"nodeType":"158","messageId":"159","endLine":4,"endColumn":16},{"ruleId":"156","severity":1,"message":"188","line":5,"column":8,"nodeType":"158","messageId":"159","endLine":5,"endColumn":16},{"ruleId":"156","severity":1,"message":"189","line":8,"column":8,"nodeType":"158","messageId":"159","endLine":8,"endColumn":16},{"ruleId":"156","severity":1,"message":"220","line":10,"column":10,"nodeType":"158","messageId":"159","endLine":10,"endColumn":25},{"ruleId":"156","severity":1,"message":"190","line":15,"column":10,"nodeType":"158","messageId":"159","endLine":15,"endColumn":20},{"ruleId":"156","severity":1,"message":"191","line":15,"column":22,"nodeType":"158","messageId":"159","endLine":15,"endColumn":35},{"ruleId":"156","severity":1,"message":"221","line":45,"column":10,"nodeType":"158","messageId":"159","endLine":45,"endColumn":23},{"ruleId":"156","severity":1,"message":"222","line":79,"column":9,"nodeType":"158","messageId":"159","endLine":79,"endColumn":29},{"ruleId":"156","severity":1,"message":"157","line":1,"column":31,"nodeType":"158","messageId":"159","endLine":1,"endColumn":37},{"ruleId":"156","severity":1,"message":"223","line":2,"column":21,"nodeType":"158","messageId":"159","endLine":2,"endColumn":24},{"ruleId":"156","severity":1,"message":"224","line":2,"column":26,"nodeType":"158","messageId":"159","endLine":2,"endColumn":29},{"ruleId":"156","severity":1,"message":"225","line":2,"column":31,"nodeType":"158","messageId":"159","endLine":2,"endColumn":37},{"ruleId":"156","severity":1,"message":"226","line":2,"column":39,"nodeType":"158","messageId":"159","endLine":2,"endColumn":42},{"ruleId":"156","severity":1,"message":"227","line":3,"column":10,"nodeType":"158","messageId":"159","endLine":3,"endColumn":26},{"ruleId":"156","severity":1,"message":"160","line":3,"column":28,"nodeType":"158","messageId":"159","endLine":3,"endColumn":34},{"ruleId":"156","severity":1,"message":"161","line":5,"column":8,"nodeType":"158","messageId":"159","endLine":5,"endColumn":23},{"ruleId":"156","severity":1,"message":"228","line":7,"column":8,"nodeType":"158","messageId":"159","endLine":7,"endColumn":21},{"ruleId":"156","severity":1,"message":"229","line":8,"column":8,"nodeType":"158","messageId":"159","endLine":8,"endColumn":15},{"ruleId":"156","severity":1,"message":"220","line":12,"column":10,"nodeType":"158","messageId":"159","endLine":12,"endColumn":25},{"ruleId":"156","severity":1,"message":"230","line":70,"column":10,"nodeType":"158","messageId":"159","endLine":70,"endColumn":14},{"ruleId":"156","severity":1,"message":"231","line":70,"column":16,"nodeType":"158","messageId":"159","endLine":70,"endColumn":23},{"ruleId":"156","severity":1,"message":"232","line":73,"column":9,"nodeType":"158","messageId":"159","endLine":73,"endColumn":22},{"ruleId":"169","severity":1,"message":"170","line":74,"column":16,"nodeType":"171","messageId":"172","endLine":74,"endColumn":18},{"ruleId":"169","severity":1,"message":"173","line":76,"column":35,"nodeType":"171","messageId":"172","endLine":76,"endColumn":37},{"ruleId":"156","severity":1,"message":"233","line":214,"column":10,"nodeType":"158","messageId":"159","endLine":214,"endColumn":18},{"ruleId":"156","severity":1,"message":"175","line":24,"column":10,"nodeType":"158","messageId":"159","endLine":24,"endColumn":15,"suppressions":"234"},{"ruleId":"177","severity":1,"message":"178","line":91,"column":6,"nodeType":"179","endLine":91,"endColumn":12,"suggestions":"235","suppressions":"236"},"no-unused-vars","'useRef' is defined but never used.","Identifier","unusedVar","'QrCode' is defined but never used.","'TrackVisibility' is defined but never used.","'mintNFT' is defined but never used.","'emailjs' is defined but never used.","'qrCode' is assigned a value but never used.","'ticketurl' is assigned a value but never used.","'serviceID' is assigned a value but never used.","'templateID' is assigned a value but never used.","'public_key' is assigned a value but never used.","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","Expected '===' and instead saw '=='.","'totalSupplyOfcall' is assigned a value but never used.","'index' is assigned a value but never used.",["237"],"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'delta' and 'tick'. Either include them or remove the dependency array.","ArrayExpression",["238"],["239"],"no-unused-expressions","Expected an assignment or function call and instead saw an expression.","ExpressionStatement","unusedExpression",["240"],"'navIcon1' is defined but never used.","'navIcon3' is defined but never used.","'navIcon6' is defined but never used.","'activeLink' is assigned a value but never used.","'setActiveLink' is assigned a value but never used.","unicode-bom","Unexpected Unicode BOM (Byte Order Mark).","Program",{"range":"241","text":"242"},["243"],"no-sequences","Unexpected use of comma operator.","SequenceExpression","unexpectedCommaExpression",["244"],["245"],["246"],["247"],["248"],"new-parens","Missing '()' invoking a constructor.","NewExpression","missing",{"range":"249","text":"250"},["251"],{"range":"252","text":"250"},["253"],"no-undef","'XDomainRequest' is not defined.","undef",["254"],["255"],"'navIcon2' is defined but never used.","'CopyToClipboard' is defined but never used.","'walletAddress' is assigned a value but never used.","'connectWalletPressed' is assigned a value but never used.","'Row' is defined but never used.","'Col' is defined but never used.","'Navbar' is defined but never used.","'Nav' is defined but never used.","'ArrowRightCircle' is defined but never used.","'QRCodeStyling' is defined but never used.","'qr_logo' is defined but never used.","'data' is assigned a value but never used.","'setData' is assigned a value but never used.","'QRdata_verify' is assigned a value but never used.","'scrolled' is assigned a value but never used.",["256"],["257"],["258"],{"kind":"259","justification":"242"},{"desc":"260","fix":"261"},{"kind":"259","justification":"242"},{"kind":"259","justification":"242"},[-1,0],"",{"kind":"259","justification":"242"},{"kind":"259","justification":"242"},{"kind":"259","justification":"242"},{"kind":"259","justification":"242"},{"kind":"259","justification":"242"},{"kind":"259","justification":"242"},[746,746],"()",{"kind":"259","justification":"242"},[861,861],{"kind":"259","justification":"242"},{"kind":"259","justification":"242"},{"kind":"259","justification":"242"},{"kind":"259","justification":"242"},{"desc":"260","fix":"262"},{"kind":"259","justification":"242"},"directive","Update the dependencies array to be: [delta, text, tick]",{"range":"263","text":"264"},{"range":"265","text":"264"},[3187,3193],"[delta, text, tick]",[2636,2642]]