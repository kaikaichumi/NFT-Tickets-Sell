{"ast":null,"code":"var _jsxFileName = \"F:\\\\conda\\\\nft_tickets\\\\nft-boneboss\\\\src\\\\components\\\\Banner.js\",\n  _s = $RefreshSig$();\nimport { useState, useEffect, useRef } from \"react\";\nimport { Container, Row, Col } from \"react-bootstrap\";\nimport { ArrowRightCircle } from 'react-bootstrap-icons';\nimport 'animate.css';\nimport TrackVisibility from 'react-on-screen';\nimport { mintNFT, verifyNFT, nftused, tokenURI, totalSupply } from \"../utils/interact.js\";\nimport QRCodeStyling from \"qr-code-styling\";\nimport qr_logo from \"../assets/img/qr_logo.png\";\nimport emailjs from \"emailjs-com\";\nimport React from 'react';\nimport { QrReader } from 'react-qr-reader';\nimport { ImgurClient } from 'imgur';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst qrCode = new QRCodeStyling({\n  width: 300,\n  height: 300,\n  image: qr_logo,\n  dotsOptions: {\n    color: \"#000000\",\n    type: \"rounded\"\n  },\n  imageOptions: {\n    crossOrigin: \"anonymous\",\n    margin: 5\n  }\n});\nexport const Banner = () => {\n  _s();\n  const [loopNum, setLoopNum] = useState(0);\n  const [isDeleting, setIsDeleting] = useState(false);\n  const [text, setText] = useState(\"\");\n  const [delta, setDelta] = useState(300 - Math.random() * 100);\n  // eslint-disable-next-line no-unused-vars\n  const [index, setIndex] = useState(1);\n  const toRotate = [\"BlockChain\", \"NFT Developer\", \"Web3 Developer\"];\n  const period = 2000;\n\n  //qrcode\n  const [url, setUrl] = useState(\"\");\n  const [fileExt] = useState(\"png\");\n  const ref = useRef(null);\n  const serviceID = 'default_service';\n  const templateID = 'template_3j0swxb';\n  const public_key = 'fimjnxCS0kCjv7IoW';\n  useEffect(() => {\n    qrCode.append(ref.current);\n  }, []);\n  useEffect(() => {\n    qrCode.update({\n      data: url\n    });\n  }, [url]);\n  //qrcode url setting\n  const onUrlChange = event => {\n    setUrl(event);\n  };\n  const onDownloadClick = () => {\n    onUrlChange(totalSupplyOfcall());\n    qrCode.download({\n      extension: fileExt\n    });\n  };\n  //qrcode\n\n  //email\n  //  const handleSubmit = (e) => {\n\n  //    emailjs.send(serviceID,templateID,{\n  //      from_name: \"kaikai\",\n  //      to_email: \"karta2398980@gmail.com\",\n  //      qr_url: \"https://i.imgur.com/KhxV27U.png\"\n  //    },public_key\n  //      )\n\n  // };\n\n  const nodemailer = require('nodemailer');\n  const transporter = nodemailer.createTransport({\n    host: 'smtp.gmail.com',\n    port: 465,\n    auth: {\n      user: 'f110110132@nkust.edu.tw',\n      pass: 'hdydwlmiaejlwcdu'\n    }\n  });\n  const handleSubmit = e => {\n    transporter.sendMail({\n      from: 'f110110132@nkust.edu.tw',\n      to: 'f110110132@nkust.edu.tw',\n      subject: '123',\n      html: '<h2>Why and How</h2> <p>The <a href=\"http://en.wikipedia.org/wiki/Lorem_ipsum\" title=\"Lorem ipsum - Wikipedia, the free encyclopedia\">Lorem ipsum</a> text is typically composed of pseudo-Latin words. It is commonly used as placeholder text to examine or demonstrate the visual effects of various graphic design. Since the text itself is meaningless, the viewers are therefore able to focus on the overall layout without being attracted to the text.</p>'\n    }).then(info => {\n      console.log({\n        info\n      });\n    }).catch(console.error);\n  };\n  //email\n\n  //qrcode 掃描\n  const [data, setData] = useState('No result');\n\n  //qrcode 掃描\n\n  useEffect(() => {\n    let ticker = setInterval(() => {\n      tick();\n    }, delta);\n    return () => clearInterval(ticker);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [text]);\n  const tick = () => {\n    let i = loopNum % toRotate.length;\n    let fullText = toRotate[i];\n    let updatedText = isDeleting ? fullText.substring(0, text.length - 1) : fullText.substring(0, text.length + 1);\n    setText(updatedText);\n    if (isDeleting) {\n      setDelta(prevDelta => prevDelta / 2);\n    }\n    if (!isDeleting && updatedText === fullText) {\n      setIsDeleting(true);\n      setIndex(prevIndex => prevIndex - 1);\n      setDelta(period);\n    } else if (isDeleting && updatedText === \"\") {\n      setIsDeleting(false);\n      setLoopNum(loopNum + 1);\n      setIndex(1);\n      setDelta(500);\n    } else {\n      setIndex(prevIndex => prevIndex + 1);\n    }\n  };\n\n  //mintNFT\n  const [count, setcount] = useState(\"\");\n  const onMint = async () => {\n    setcount(1);\n    console.log(count);\n    const {\n      status\n    } = await mintNFT(count);\n    console.log(status);\n    alert(status);\n  };\n\n  //verify nft \n  const inputRef = useRef(null);\n  const [tokenId, setTokenId] = useState(\"\");\n  const onVerify = async () => {\n    // 👇 \"inputRef.current.value\" is input value\n    setTokenId(inputRef.current.value);\n    if (tokenId < 0 || tokenId > 100) {\n      console.log(\"Please input tokenId for the range 0~99.\");\n      alert(\"Please input tokenId for the range 0~99.\");\n    } else {\n      const status = await verifyNFT(tokenId);\n      console.log(status);\n      alert(status);\n    }\n  };\n\n  //nftused return(uint256)\n  const OwnerOfcall = async () => {\n    setTokenId(inputRef.current.value);\n    if (tokenId < 0 || tokenId > 100) {\n      console.log(\"Please input tokenId for the range 0~99.\");\n      alert(\"Please input tokenId for the range 0~99.\");\n    } else {\n      const status = await nftused(tokenId);\n      console.log(status);\n      alert(status);\n    }\n  };\n  //totalSupply return(uint256)\n  const totalSupplyOfcall = async () => {\n    const {\n      status\n    } = await totalSupply();\n    console.log(status);\n    alert(status);\n    return status;\n  };\n\n  //tokenURI\n  const tokenURICall = async () => {\n    setTokenId(inputRef.current.value);\n    if (tokenId < 0 || tokenId > 100) {\n      console.log(\"Please input tokenId for the range 0~99.\");\n      alert(\"Please input tokenId for the range 0~99.\");\n    } else {\n      const {\n        status\n      } = await tokenURI(tokenId);\n      console.log(status);\n      alert(status);\n    }\n  };\n  const styles = {\n    inputWrapper: {\n      margin: \"100px 0\",\n      display: \"flex\",\n      justifyContent: \"space-between\",\n      width: \"100%\"\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: \"banner\",\n    id: \"home\",\n    children: /*#__PURE__*/_jsxDEV(Container, {\n      children: /*#__PURE__*/_jsxDEV(Row, {\n        className: \"aligh-items-center\",\n        children: [/*#__PURE__*/_jsxDEV(Col, {\n          xs: 12,\n          md: 6,\n          xl: 7,\n          children: /*#__PURE__*/_jsxDEV(TrackVisibility, {\n            children: _ref => {\n              let {\n                isVisible\n              } = _ref;\n              return /*#__PURE__*/_jsxDEV(\"div\", {\n                className: isVisible ? \"animate__animated animate__fadeIn\" : \"\",\n                children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                  onClick: onMint,\n                  children: [\"Mint NFT! \", /*#__PURE__*/_jsxDEV(ArrowRightCircle, {\n                    size: 30\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 245,\n                    columnNumber: 31\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 244,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  ref: inputRef,\n                  type: \"text\",\n                  placeholder: \"your tokenId\",\n                  id: \"verifytext\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 247,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  onClick: OwnerOfcall,\n                  children: [\"Check the remaining usage\", /*#__PURE__*/_jsxDEV(ArrowRightCircle, {\n                    size: 30\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 255,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 253,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  onClick: onVerify,\n                  children: [\"Verify NFT Ticket \", /*#__PURE__*/_jsxDEV(ArrowRightCircle, {\n                    size: 30\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 258,\n                    columnNumber: 39\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 257,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  onClick: tokenURICall,\n                  children: [\"View NFT tokenURI\", /*#__PURE__*/_jsxDEV(ArrowRightCircle, {\n                    size: 30\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 262,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 260,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 237,\n                columnNumber: 17\n              }, this);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 235,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 234,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          xs: 12,\n          md: 6,\n          xl: 5,\n          children: /*#__PURE__*/_jsxDEV(TrackVisibility, {\n            children: _ref2 => {\n              let {\n                isVisible\n              } = _ref2;\n              return /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"App\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  children: /*#__PURE__*/_jsxDEV(\"button\", {\n                    onClick: handleSubmit,\n                    children: \"Download\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 274,\n                    columnNumber: 19\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 272,\n                  columnNumber: 17\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  ref: ref\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 276,\n                  columnNumber: 17\n                }, this), /*#__PURE__*/_jsxDEV(_Fragment, {\n                  children: [/*#__PURE__*/_jsxDEV(QrReader, {\n                    onResult: (result, error) => {\n                      if (!!result) {\n                        setData(result === null || result === void 0 ? void 0 : result.text);\n                      }\n                      if (!!error) {\n                        console.info(error);\n                      }\n                    },\n                    style: {\n                      width: '100%'\n                    }\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 278,\n                    columnNumber: 17\n                  }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                    children: data\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 290,\n                    columnNumber: 17\n                  }, this)]\n                }, void 0, true)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 271,\n                columnNumber: 17\n              }, this);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 269,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 268,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 233,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 232,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 231,\n    columnNumber: 5\n  }, this);\n};\n// <div style={styles.inputWrapper}>\n// <input value={url} onChange={onUrlChange} style={styles.inputBox} />                  \n// <button onClick={onDownloadClick}>Download</button>\n// </div>\n_s(Banner, \"AR9XwIQARtA5m8v5+BNwmEF63A0=\");\n_c = Banner;\nvar _c;\n$RefreshReg$(_c, \"Banner\");","map":{"version":3,"names":["useState","useEffect","useRef","Container","Row","Col","ArrowRightCircle","TrackVisibility","mintNFT","verifyNFT","nftused","tokenURI","totalSupply","QRCodeStyling","qr_logo","emailjs","React","QrReader","ImgurClient","qrCode","width","height","image","dotsOptions","color","type","imageOptions","crossOrigin","margin","Banner","loopNum","setLoopNum","isDeleting","setIsDeleting","text","setText","delta","setDelta","Math","random","index","setIndex","toRotate","period","url","setUrl","fileExt","ref","serviceID","templateID","public_key","append","current","update","data","onUrlChange","event","onDownloadClick","totalSupplyOfcall","download","extension","nodemailer","require","transporter","createTransport","host","port","auth","user","pass","handleSubmit","e","sendMail","from","to","subject","html","then","info","console","log","catch","error","setData","ticker","setInterval","tick","clearInterval","i","length","fullText","updatedText","substring","prevDelta","prevIndex","count","setcount","onMint","status","alert","inputRef","tokenId","setTokenId","onVerify","value","OwnerOfcall","tokenURICall","styles","inputWrapper","display","justifyContent","isVisible","result"],"sources":["F:/conda/nft_tickets/nft-boneboss/src/components/Banner.js"],"sourcesContent":["import { useState, useEffect, useRef } from \"react\";\r\nimport { Container, Row, Col } from \"react-bootstrap\";\r\nimport { ArrowRightCircle } from 'react-bootstrap-icons';\r\nimport 'animate.css';\r\nimport TrackVisibility from 'react-on-screen';\r\nimport { mintNFT, verifyNFT, nftused, tokenURI ,totalSupply} from \"../utils/interact.js\";\r\nimport QRCodeStyling from \"qr-code-styling\";\r\nimport qr_logo from \"../assets/img/qr_logo.png\";\r\nimport emailjs from \"emailjs-com\";\r\nimport React from 'react';\r\nimport { QrReader } from 'react-qr-reader';\r\nimport { ImgurClient } from 'imgur';\r\n\r\nconst qrCode = new QRCodeStyling({\r\n  width: 300,\r\n  height: 300,\r\n  image:\r\n  qr_logo,\r\n  dotsOptions: {\r\n    color: \"#000000\",\r\n    type: \"rounded\"\r\n  },\r\n  imageOptions: {\r\n    crossOrigin: \"anonymous\",\r\n    margin: 5\r\n  },\r\n});\r\n\r\nexport const Banner = () => {\r\n  const [loopNum, setLoopNum] = useState(0);\r\n  const [isDeleting, setIsDeleting] = useState(false);\r\n  const [text, setText] = useState(\"\");\r\n  const [delta, setDelta] = useState(300 - Math.random() * 100);\r\n  // eslint-disable-next-line no-unused-vars\r\n  const [index, setIndex] = useState(1);\r\n  const toRotate = [\"BlockChain\", \"NFT Developer\", \"Web3 Developer\"];\r\n  const period = 2000;\r\n\r\n  //qrcode\r\n  const [url, setUrl] = useState(\"\");\r\n  const [fileExt] = useState(\"png\");\r\n  const ref = useRef(null);\r\n\r\n  const serviceID = 'default_service';\r\n  const templateID = 'template_3j0swxb';\r\n  const public_key = 'fimjnxCS0kCjv7IoW'\r\n\r\n  useEffect(() => {\r\n    qrCode.append(ref.current);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    qrCode.update({\r\n      data: url\r\n    });\r\n  }, [url]);\r\n  //qrcode url setting\r\n  const onUrlChange = (event) => {\r\n    setUrl(event);\r\n  };\r\n\r\n  const onDownloadClick = () => {\r\n    onUrlChange(totalSupplyOfcall());\r\n    qrCode.download({\r\n      extension: fileExt\r\n    });\r\n  };  \r\n  //qrcode\r\n\r\n\r\n  //email\r\n  //  const handleSubmit = (e) => {\r\n    \r\n  //    emailjs.send(serviceID,templateID,{\r\n  //      from_name: \"kaikai\",\r\n  //      to_email: \"karta2398980@gmail.com\",\r\n  //      qr_url: \"https://i.imgur.com/KhxV27U.png\"\r\n  //    },public_key\r\n  //      )\r\n      \r\n  // };\r\n\r\n  const nodemailer = require('nodemailer');\r\n  const transporter = nodemailer.createTransport({\r\n    host: 'smtp.gmail.com',\r\n    port: 465,\r\n    auth: {\r\n      user: 'f110110132@nkust.edu.tw',\r\n      pass: 'hdydwlmiaejlwcdu',\r\n    },\r\n  });\r\n  const handleSubmit = (e) => {\r\n    transporter.sendMail({\r\n      from: 'f110110132@nkust.edu.tw',\r\n      to: 'f110110132@nkust.edu.tw',\r\n      subject: '123',\r\n      html: '<h2>Why and How</h2> <p>The <a href=\"http://en.wikipedia.org/wiki/Lorem_ipsum\" title=\"Lorem ipsum - Wikipedia, the free encyclopedia\">Lorem ipsum</a> text is typically composed of pseudo-Latin words. It is commonly used as placeholder text to examine or demonstrate the visual effects of various graphic design. Since the text itself is meaningless, the viewers are therefore able to focus on the overall layout without being attracted to the text.</p>',\r\n    }).then(info => {\r\n      console.log({ info });\r\n    }).catch(console.error);\r\n  }\r\n  //email\r\n\r\n\r\n  //qrcode 掃描\r\n  const [data, setData] = useState('No result');\r\n  \r\n  //qrcode 掃描\r\n \r\n\r\n \r\n\r\n\r\n\r\n\r\n  useEffect(() => {\r\n    let ticker = setInterval(() => {\r\n      tick();\r\n    }, delta);\r\n\r\n    return () => clearInterval(ticker);\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [text]);\r\n\r\n  const tick = () => {\r\n    let i = loopNum % toRotate.length;\r\n    let fullText = toRotate[i];\r\n    let updatedText = isDeleting\r\n      ? fullText.substring(0, text.length - 1)\r\n      : fullText.substring(0, text.length + 1);\r\n\r\n    setText(updatedText);\r\n\r\n    if (isDeleting) {\r\n      setDelta((prevDelta) => prevDelta / 2);\r\n    }\r\n\r\n    if (!isDeleting && updatedText === fullText) {\r\n      setIsDeleting(true);\r\n      setIndex((prevIndex) => prevIndex - 1);\r\n      setDelta(period);\r\n    } else if (isDeleting && updatedText === \"\") {\r\n      setIsDeleting(false);\r\n      setLoopNum(loopNum + 1);\r\n      setIndex(1);\r\n      setDelta(500);\r\n    } else {\r\n      setIndex((prevIndex) => prevIndex + 1);\r\n    }\r\n  };\r\n\r\n  //mintNFT\r\n  const [count, setcount] = useState(\"\");\r\n  const onMint = async () => {\r\n    setcount(1);\r\n    console.log(count);\r\n    const { status } = await mintNFT(count);\r\n    console.log(status);\r\n    alert(status);\r\n  };\r\n\r\n  //verify nft \r\n  const inputRef = useRef(null);\r\n  const [tokenId, setTokenId] = useState(\"\");\r\n  const onVerify = async () => {\r\n    // 👇 \"inputRef.current.value\" is input value\r\n    setTokenId(inputRef.current.value);\r\n    if (tokenId < 0 || tokenId > 100) {\r\n      console.log(\"Please input tokenId for the range 0~99.\");\r\n      alert(\"Please input tokenId for the range 0~99.\");\r\n    } else {\r\n      const status  = await verifyNFT(tokenId);\r\n      console.log(status);\r\n      alert(status);\r\n    }\r\n  };\r\n\r\n  //nftused return(uint256)\r\n  const OwnerOfcall = async()=>{\r\n    setTokenId(inputRef.current.value);\r\n    if (tokenId < 0 || tokenId > 100) {\r\n      console.log(\"Please input tokenId for the range 0~99.\");\r\n      alert(\"Please input tokenId for the range 0~99.\");\r\n    } else {\r\n      const  status  = await nftused(tokenId);\r\n      console.log(status);\r\n      alert(status);\r\n    }\r\n  }\r\n  //totalSupply return(uint256)\r\n  const totalSupplyOfcall = async()=>{\r\n    const { status } = await totalSupply();\r\n    console.log(status);\r\n    alert(status);\r\n    return status;\r\n  }\r\n  \r\n\r\n  //tokenURI\r\n  const tokenURICall = async()=>{\r\n    setTokenId(inputRef.current.value);\r\n    if (tokenId < 0 || tokenId > 100) {\r\n      console.log(\"Please input tokenId for the range 0~99.\");\r\n      alert(\"Please input tokenId for the range 0~99.\");\r\n    } else {\r\n      const { status } = await tokenURI(tokenId);\r\n      console.log(status);\r\n      alert(status);\r\n    }\r\n  }\r\n\r\n\r\n\r\n  \r\n    \r\n  const styles = {\r\n    inputWrapper: {\r\n      margin: \"100px 0\",\r\n      display: \"flex\",\r\n      justifyContent: \"space-between\",\r\n      width: \"100%\"\r\n    },\r\n    \r\n  };\r\n  \r\n\r\n\r\n\r\n\r\n  return (\r\n    <section className=\"banner\" id=\"home\">\r\n      <Container>\r\n        <Row className=\"aligh-items-center\">\r\n          <Col xs={12} md={6} xl={7}>\r\n            <TrackVisibility>\r\n              {({ isVisible }) => (\r\n                <div\r\n                  className={\r\n                    isVisible ? \"animate__animated animate__fadeIn\" : \"\"\r\n                  }\r\n                >\r\n                                   \r\n                  \r\n                  <button onClick={onMint}>\r\n                    Mint NFT! <ArrowRightCircle size={30} />\r\n                  </button>\r\n                  <input\r\n                    ref={inputRef}\r\n                    type=\"text\"\r\n                    placeholder=\"your tokenId\"\r\n                    id=\"verifytext\"\r\n                  />\r\n                  <button onClick={OwnerOfcall}>\r\n                    Check the remaining usage\r\n                    <ArrowRightCircle size={30} />\r\n                  </button>\r\n                  <button onClick={onVerify}>\r\n                    Verify NFT Ticket <ArrowRightCircle size={30} />\r\n                  </button>\r\n                  <button onClick={tokenURICall}>\r\n                    View NFT tokenURI\r\n                    <ArrowRightCircle size={30} />\r\n                  </button>\r\n                </div>\r\n              )}\r\n            </TrackVisibility>\r\n          </Col>\r\n          <Col xs={12} md={6} xl={5}>\r\n            <TrackVisibility>\r\n              {({ isVisible }) => (\r\n                <div className=\"App\">\r\n                <div>\r\n                                  \r\n                  <button onClick={handleSubmit}>Download</button>\r\n                </div>\r\n                <div ref={ref} />\r\n                <>\r\n                <QrReader\r\n                  onResult={(result, error) => {\r\n                    if (!!result) {\r\n                      setData(result?.text);\r\n                    }\r\n\r\n                    if (!!error) {\r\n                      console.info(error);\r\n                    }\r\n                  }}\r\n                  style={{ width: '100%' }}\r\n                />\r\n                <p>{data}</p>\r\n              </>\r\n                </div>\r\n              )}\r\n            </TrackVisibility>\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n    </section>\r\n  );\r\n}\r\n// <div style={styles.inputWrapper}>\r\n// <input value={url} onChange={onUrlChange} style={styles.inputBox} />                  \r\n// <button onClick={onDownloadClick}>Download</button>\r\n// </div>"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}