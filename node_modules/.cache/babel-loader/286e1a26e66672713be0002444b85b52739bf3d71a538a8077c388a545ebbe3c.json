{"ast":null,"code":"var _jsxFileName = \"F:\\\\conda\\\\nft_tickets\\\\nft-boneboss\\\\src\\\\components\\\\Banner.js\",\n  _s = $RefreshSig$();\nimport { useState, useEffect, useRef } from \"react\";\nimport { Container, Row, Col } from \"react-bootstrap\";\nimport { ArrowRightCircle, QrCode } from 'react-bootstrap-icons';\nimport 'animate.css';\nimport TrackVisibility from 'react-on-screen';\nimport { mintNFT, verifyNFT, nftused, tokenURI, totalSupply } from \"../utils/interact.js\";\nimport QRCodeStyling from \"qr-code-styling\";\nimport qr_logo from \"../assets/img/qr_logo.png\";\nimport emailjs from \"emailjs-com\";\nimport React from 'react';\nimport { QrReader } from 'react-qr-reader';\n// import { Email } from \"./smtp.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst qrCode = new QRCodeStyling({\n  width: 300,\n  height: 300,\n  image: qr_logo,\n  dotsOptions: {\n    color: \"#000000\",\n    type: \"rounded\"\n  },\n  imageOptions: {\n    crossOrigin: \"anonymous\",\n    margin: 5\n  }\n});\nexport const Banner = () => {\n  _s();\n  const [loopNum, setLoopNum] = useState(0);\n  const [isDeleting, setIsDeleting] = useState(false);\n  const [text, setText] = useState(\"\");\n  const [delta, setDelta] = useState(300 - Math.random() * 100);\n  // eslint-disable-next-line no-unused-vars\n  const [index, setIndex] = useState(1);\n  const toRotate = [\"BlockChain\", \"NFT Developer\", \"Web3 Developer\"];\n  const period = 2000;\n\n  //qrcode\n  // const [url, setUrl] = useState(\"\");\n  // const [fileExt] = useState(\"png\");\n  // const ref = useRef(null);\n  const [ticketurl, seturl] = useState(\"\");\n  const serviceID = 'service_ht3538';\n  const templateID = 'template_3j0swxb';\n  const public_key = 'hHDC_0ICfYvN290Ae';\n  useEffect(() => {\n    qrCode.append(ref.current);\n  }, []);\n  useEffect(() => {\n    qrCode.update({\n      data: url\n    });\n  }, [url]);\n  //qrcode url setting\n  // const onUrlChange = (event) => {\n  //   setUrl(event);\n  // };\n\n  // const onDownloadClick = () => {\n  //   onUrlChange(totalSupplyOfcall());\n  //   qrCode.download({\n  //     extension: fileExt\n  //   });\n  // };  \n  //qrcode\n\n  //email\n  // const email_send = async () => {\n  //   var tokenid = await totalSupplyOfcall();\n  //   var img_url = '<img src=\"https://api.qrserver.com/v1/create-qr-code/?data='+tokenid+'&amp;size=200x200\" alt=\"QRcode error\" />';\n  //   console.log(tokenid)\n  //   const emailParams = {\n  //     to_name: \"kaikai\",\n  //     to_email: \"karta2398980@gmail.com\",\n  //     qr_html: img_url,\n  //   };\n  //   console.log(img_url)\n  //   emailjs.send(serviceID, templateID, emailParams, public_key)\n  //       .then((result) => {\n  //           console.log(result);    \n  //       }, (error) => {\n  //           console.log(error)\n  //       })\n  // };\n\n  //email\n\n  //qrcode 掃描\n  const [data, setData] = useState('No result');\n  var QRdata = 'No result';\n  //qrcode 驗證\n  const QRdata_verify = async data => {\n    if (QRdata != data) {\n      //判斷data是否被改變\n      QRdata = data;\n      if ((await OwnerOfcall(data)) == true) {\n        onVerify(data);\n      }\n      ;\n    }\n  };\n  useEffect(() => {\n    let ticker = setInterval(() => {\n      tick();\n    }, delta);\n    return () => clearInterval(ticker);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [text]);\n  const tick = () => {\n    let i = loopNum % toRotate.length;\n    let fullText = toRotate[i];\n    let updatedText = isDeleting ? fullText.substring(0, text.length - 1) : fullText.substring(0, text.length + 1);\n    setText(updatedText);\n    if (isDeleting) {\n      setDelta(prevDelta => prevDelta / 2);\n    }\n    if (!isDeleting && updatedText === fullText) {\n      setIsDeleting(true);\n      setIndex(prevIndex => prevIndex - 1);\n      setDelta(period);\n    } else if (isDeleting && updatedText === \"\") {\n      setIsDeleting(false);\n      setLoopNum(loopNum + 1);\n      setIndex(1);\n      setDelta(500);\n    } else {\n      setIndex(prevIndex => prevIndex + 1);\n    }\n  };\n\n  //mintNFT\n  // const [count, setcount] = useState(1);\n  // const onMint = async () => {\n  //   setcount(1);\n  //   console.log(count);\n  //   const { status } = await mintNFT(count);\n  //   console.log(status);\n  //   alert(status);\n  // };\n\n  //verify nft \n\n  var tokenId = \"\";\n  const onVerify = async data => {\n    // 👇 \"inputRef.current.value\" is input value\n    tokenId = data;\n    console.log(tokenId);\n    if (tokenId < 0 || tokenId > 100) {\n      console.log(\"Please input tokenId for the range 0~99.\");\n      alert(\"Please input tokenId for the range 0~99.\");\n    } else {\n      const {\n        status\n      } = await verifyNFT(tokenId);\n      console.log(status);\n      alert(status);\n    }\n  };\n\n  //nftused return(uint256)\n  const OwnerOfcall = async data => {\n    tokenId = data;\n    console.log(tokenId);\n    if (tokenId < 0 || tokenId > 100) {\n      console.log(\"Please input tokenId for the range 0~99.\");\n      alert(\"Please input tokenId for the range 0~99.\");\n      return false;\n    } else {\n      const {\n        status,\n        success\n      } = await nftused(tokenId);\n      console.log(status);\n      console.log(success);\n      console.log(success.toString());\n      const baseuri = await tokenURICall(data);\n      alert(status);\n      fetch(baseuri).then(response => response.json()).then(json => seturl(json.image));\n      //alert(status+\"   門票網址：https://sapphire-subsequent-pelican-620.mypinata.cloud/ipfs/QmTaGeVoQ6juoukCPfj87vteCqXGijXoa3aEzTcsW1y3kp/00.png\");\n      return success;\n    }\n  };\n  //totalSupply return(uint256)\n  const totalSupplyOfcall = async () => {\n    const {\n      status\n    } = await totalSupply();\n    console.log(status);\n    alert(parseInt(status.toString()) - 1);\n    return parseInt(status.toString()) - 1;\n  };\n\n  //tokenURI\n  const tokenURICall = async data => {\n    tokenId = data;\n    console.log(tokenId);\n    if (tokenId < 0 || tokenId > 100) {\n      console.log(\"Please input tokenId for the range 0~99.\");\n      alert(\"Please input tokenId for the range 0~99.\");\n    } else {\n      const {\n        status\n      } = await tokenURI(tokenId);\n      console.log(status);\n      //alert(\"https://sapphire-subsequent-pelican-620.mypinata.cloud/ipfs/QmTaGeVoQ6juoukCPfj87vteCqXGijXoa3aEzTcsW1y3kp/00.png\");\n      // fetch(status)\n      //   .then((response) => response.json())\n      //   .then((json) => alert(json.image));\n      return status;\n    }\n  };\n  const ticketURL = () => {\n    const url = ticketurl;\n    //const url = \"https://sapphire-subsequent-pelican-620.mypinata.cloud/ipfs/QmTaGeVoQ6juoukCPfj87vteCqXGijXoa3aEzTcsW1y3kp/00.png\";\n    var newTab = window.open(url, '_blank');\n    // eslint-disable-next-line no-unused-expressions\n    newTab.location;\n  };\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: \"banner\",\n    id: \"home\",\n    children: /*#__PURE__*/_jsxDEV(Container, {\n      children: /*#__PURE__*/_jsxDEV(Row, {\n        className: \"aligh-items-center\",\n        children: [/*#__PURE__*/_jsxDEV(Col, {\n          xs: 12,\n          md: 6,\n          xl: 7,\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n              children: [\"TokenId: \", data]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 250,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(QrReader, {\n              onResult: (result, error) => {\n                if (!!result) {\n                  setData(result === null || result === void 0 ? void 0 : result.text);\n                  QRdata_verify(result === null || result === void 0 ? void 0 : result.text);\n                }\n                if (!!error) {\n                  console.info(error);\n                }\n              },\n              scanDelay: 200,\n              style: {\n                width: '100%'\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 251,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 248,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 246,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          xs: 12,\n          md: 6,\n          xl: 7,\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: ticketURL,\n              children: [\"\\u67E5\\u770B\\u9580\\u7968  \", /*#__PURE__*/_jsxDEV(ArrowRightCircle, {\n                size: 30\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 278,\n                columnNumber: 27\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 277,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 276,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 268,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 245,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 244,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 243,\n    columnNumber: 5\n  }, this);\n};\n_s(Banner, \"QhFZS5+RTSAwA0Q6ZD1JdO+xddE=\");\n_c = Banner;\nvar _c;\n$RefreshReg$(_c, \"Banner\");","map":{"version":3,"names":["useState","useEffect","useRef","Container","Row","Col","ArrowRightCircle","QrCode","TrackVisibility","mintNFT","verifyNFT","nftused","tokenURI","totalSupply","QRCodeStyling","qr_logo","emailjs","React","QrReader","qrCode","width","height","image","dotsOptions","color","type","imageOptions","crossOrigin","margin","Banner","loopNum","setLoopNum","isDeleting","setIsDeleting","text","setText","delta","setDelta","Math","random","index","setIndex","toRotate","period","ticketurl","seturl","serviceID","templateID","public_key","append","ref","current","update","data","url","setData","QRdata","QRdata_verify","OwnerOfcall","onVerify","ticker","setInterval","tick","clearInterval","i","length","fullText","updatedText","substring","prevDelta","prevIndex","tokenId","console","log","alert","status","success","toString","baseuri","tokenURICall","fetch","then","response","json","totalSupplyOfcall","parseInt","ticketURL","newTab","window","open","location","result","error","info"],"sources":["F:/conda/nft_tickets/nft-boneboss/src/components/Banner.js"],"sourcesContent":["import { useState, useEffect, useRef } from \"react\";\r\nimport { Container, Row, Col } from \"react-bootstrap\";\r\nimport { ArrowRightCircle, QrCode } from 'react-bootstrap-icons';\r\nimport 'animate.css';\r\nimport TrackVisibility from 'react-on-screen';\r\nimport { mintNFT, verifyNFT, nftused, tokenURI ,totalSupply} from \"../utils/interact.js\";\r\nimport QRCodeStyling from \"qr-code-styling\";\r\nimport qr_logo from \"../assets/img/qr_logo.png\";\r\nimport emailjs from \"emailjs-com\";\r\nimport React from 'react';\r\nimport { QrReader } from 'react-qr-reader';\r\n// import { Email } from \"./smtp.js\";\r\n\r\nconst qrCode = new QRCodeStyling({\r\n  width: 300,\r\n  height: 300,\r\n  image:\r\n  qr_logo,\r\n  dotsOptions: {\r\n    color: \"#000000\",\r\n    type: \"rounded\"\r\n  },\r\n  imageOptions: {\r\n    crossOrigin: \"anonymous\",\r\n    margin: 5\r\n  },\r\n});\r\n\r\n\r\nexport const Banner = () => {\r\n  const [loopNum, setLoopNum] = useState(0);\r\n  const [isDeleting, setIsDeleting] = useState(false);\r\n  const [text, setText] = useState(\"\");\r\n  const [delta, setDelta] = useState(300 - Math.random() * 100);\r\n  // eslint-disable-next-line no-unused-vars\r\n  const [index, setIndex] = useState(1);\r\n  const toRotate = [\"BlockChain\", \"NFT Developer\", \"Web3 Developer\"];\r\n  const period = 2000;\r\n\r\n  //qrcode\r\n  // const [url, setUrl] = useState(\"\");\r\n  // const [fileExt] = useState(\"png\");\r\n  // const ref = useRef(null);\r\n  const [ticketurl, seturl] = useState(\"\");\r\n  const serviceID = 'service_ht3538';\r\n  const templateID = 'template_3j0swxb';\r\n  const public_key = 'hHDC_0ICfYvN290Ae';\r\n\r\n  useEffect(() => {\r\n    qrCode.append(ref.current);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    qrCode.update({\r\n      data: url\r\n    });\r\n  }, [url]);\r\n  //qrcode url setting\r\n  // const onUrlChange = (event) => {\r\n  //   setUrl(event);\r\n  // };\r\n\r\n  // const onDownloadClick = () => {\r\n  //   onUrlChange(totalSupplyOfcall());\r\n  //   qrCode.download({\r\n  //     extension: fileExt\r\n  //   });\r\n  // };  \r\n  //qrcode\r\n   \r\n  //email\r\n  // const email_send = async () => {\r\n  //   var tokenid = await totalSupplyOfcall();\r\n  //   var img_url = '<img src=\"https://api.qrserver.com/v1/create-qr-code/?data='+tokenid+'&amp;size=200x200\" alt=\"QRcode error\" />';\r\n  //   console.log(tokenid)\r\n  //   const emailParams = {\r\n  //     to_name: \"kaikai\",\r\n  //     to_email: \"karta2398980@gmail.com\",\r\n  //     qr_html: img_url,\r\n  //   };\r\n  //   console.log(img_url)\r\n  //   emailjs.send(serviceID, templateID, emailParams, public_key)\r\n  //       .then((result) => {\r\n  //           console.log(result);    \r\n  //       }, (error) => {\r\n  //           console.log(error)\r\n  //       })\r\n  // };\r\n\r\n  //email\r\n\r\n\r\n  //qrcode 掃描\r\n  const [data, setData] = useState('No result');\r\n  var QRdata = 'No result';\r\n  //qrcode 驗證\r\n  const QRdata_verify = async (data) => {\r\n    if (QRdata != data){//判斷data是否被改變\r\n      QRdata = data;\r\n      if (await OwnerOfcall(data) == true){\r\n        onVerify(data);\r\n      };\r\n    }\r\n  }\r\n  \r\n  \r\n\r\n  useEffect(() => {\r\n    let ticker = setInterval(() => {\r\n      tick();\r\n    }, delta);\r\n\r\n    return () => clearInterval(ticker);\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [text]);\r\n\r\n  const tick = () => {\r\n    let i = loopNum % toRotate.length;\r\n    let fullText = toRotate[i];\r\n    let updatedText = isDeleting\r\n      ? fullText.substring(0, text.length - 1)\r\n      : fullText.substring(0, text.length + 1);\r\n\r\n    setText(updatedText);\r\n\r\n    if (isDeleting) {\r\n      setDelta((prevDelta) => prevDelta / 2);\r\n    }\r\n\r\n    if (!isDeleting && updatedText === fullText) {\r\n      setIsDeleting(true);\r\n      setIndex((prevIndex) => prevIndex - 1);\r\n      setDelta(period);\r\n    } else if (isDeleting && updatedText === \"\") {\r\n      setIsDeleting(false);\r\n      setLoopNum(loopNum + 1);\r\n      setIndex(1);\r\n      setDelta(500);\r\n    } else {\r\n      setIndex((prevIndex) => prevIndex + 1);\r\n    }\r\n  };\r\n  \r\n\r\n\r\n\r\n  //mintNFT\r\n  // const [count, setcount] = useState(1);\r\n  // const onMint = async () => {\r\n  //   setcount(1);\r\n  //   console.log(count);\r\n  //   const { status } = await mintNFT(count);\r\n  //   console.log(status);\r\n  //   alert(status);\r\n  // };\r\n\r\n  //verify nft \r\n  \r\n  var tokenId = \"\";\r\n  \r\n  const onVerify = async (data) => {\r\n    // 👇 \"inputRef.current.value\" is input value\r\n    tokenId = data;\r\n    console.log(tokenId);\r\n    if (tokenId < 0 || tokenId > 100) {\r\n      console.log(\"Please input tokenId for the range 0~99.\");\r\n      alert(\"Please input tokenId for the range 0~99.\");\r\n    } else {\r\n      const { status } = await verifyNFT(tokenId);\r\n      console.log(status);\r\n      alert(status);\r\n    }\r\n  };\r\n  \r\n  //nftused return(uint256)\r\n  const OwnerOfcall = async(data)=>{\r\n    tokenId = data;\r\n    console.log(tokenId);\r\n    if (tokenId < 0 || tokenId > 100) {\r\n      console.log(\"Please input tokenId for the range 0~99.\");\r\n      alert(\"Please input tokenId for the range 0~99.\");\r\n      return false;\r\n    } else {\r\n      \r\n      const { status, success} = await nftused(tokenId);\r\n      console.log(status);\r\n      console.log(success);\r\n      console.log(success.toString());\r\n      const baseuri = await tokenURICall(data);\r\n      alert(status);\r\n      fetch(baseuri)\r\n        .then((response) => response.json())\r\n        .then((json) => seturl(json.image));\r\n      //alert(status+\"   門票網址：https://sapphire-subsequent-pelican-620.mypinata.cloud/ipfs/QmTaGeVoQ6juoukCPfj87vteCqXGijXoa3aEzTcsW1y3kp/00.png\");\r\n      return success;\r\n    }\r\n    \r\n  }\r\n  //totalSupply return(uint256)\r\n  const totalSupplyOfcall = async()=>{\r\n    const { status } = await totalSupply();\r\n    console.log(status);\r\n    alert(parseInt(status.toString())-1);\r\n    return parseInt(status.toString())-1;\r\n  }\r\n  \r\n\r\n  //tokenURI\r\n  const tokenURICall = async(data)=>{\r\n    \r\n    tokenId = data;\r\n    console.log(tokenId);\r\n    if (tokenId < 0 || tokenId > 100) {\r\n      console.log(\"Please input tokenId for the range 0~99.\");\r\n      alert(\"Please input tokenId for the range 0~99.\");\r\n    } else {\r\n      const { status } = await tokenURI(tokenId);\r\n      console.log(status);\r\n      //alert(\"https://sapphire-subsequent-pelican-620.mypinata.cloud/ipfs/QmTaGeVoQ6juoukCPfj87vteCqXGijXoa3aEzTcsW1y3kp/00.png\");\r\n      // fetch(status)\r\n      //   .then((response) => response.json())\r\n      //   .then((json) => alert(json.image));\r\n    return status;\r\n    }\r\n  }\r\n  \r\n  const ticketURL = () => {\r\n    const url = ticketurl;\r\n    //const url = \"https://sapphire-subsequent-pelican-620.mypinata.cloud/ipfs/QmTaGeVoQ6juoukCPfj87vteCqXGijXoa3aEzTcsW1y3kp/00.png\";\r\n    var newTab = window.open(url, '_blank');\r\n    // eslint-disable-next-line no-unused-expressions\r\n    newTab.location;\r\n  }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n  return (\r\n    <section className=\"banner\" id=\"home\">\r\n      <Container>\r\n        <Row className=\"aligh-items-center\">\r\n        <Col xs={12} md={6} xl={7}>\r\n            \r\n              <div>\r\n            \r\n                <h4>TokenId: {data}</h4>\r\n                <QrReader\r\n                  onResult={(result, error) => {\r\n                    if (!!result) {\r\n                      setData(result?.text);\r\n                      QRdata_verify(result?.text);\r\n                    }\r\n\r\n                    if (!!error) {\r\n                      console.info(error);\r\n                    }\r\n                  }}\r\n                  scanDelay={200}\r\n                  style={{ width: '100%' }}\r\n                />\r\n              </div>\r\n\r\n          </Col>\r\n          <Col xs={12} md={6} xl={7}>\r\n            \r\n                {/* <div>             \r\n                  <button onClick={onMint}>\r\n                    購買NFT門票! <ArrowRightCircle size={30} />\r\n                  </button>\r\n                  \r\n                </div> */}\r\n                <div>\r\n                  <button onClick={ticketURL}>\r\n                    查看門票  <ArrowRightCircle size={30} />\r\n                  </button>\r\n                </div>\r\n                \r\n              \r\n          </Col>\r\n                \r\n        </Row>\r\n      </Container>\r\n    </section>\r\n  );\r\n}\r\n\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}