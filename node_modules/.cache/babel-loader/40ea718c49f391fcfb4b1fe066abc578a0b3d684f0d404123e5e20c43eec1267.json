{"ast":null,"code":"var _jsxFileName = \"F:\\\\conda\\\\nft_tickets\\\\nft-boneboss\\\\src\\\\components\\\\MailchimpForm.js\";\nimport MailchimpSubscribe from \"react-mailchimp-subscribe\";\nimport { Newsletter } from \"./Newsletter\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const MailchimpForm = () => {\n  const postUrl = `${process.env.REACT_APP_MAILCHIMP_URL}?u=${process.env.REACT_APP_MAILCHIMP_U}&id=${process.env.REACT_APP_MAILCHIMP_ID}`;\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(MailchimpSubscribe, {\n      url: postUrl,\n      render: _ref => {\n        let {\n          subscribe,\n          status,\n          message\n        } = _ref;\n        return /*#__PURE__*/_jsxDEV(Newsletter, {\n          status: status,\n          message: message,\n          onValidated: formData => subscribe(formData)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 12,\n          columnNumber: 11\n        }, this);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n_c = MailchimpForm;\nvar _c;\n$RefreshReg$(_c, \"MailchimpForm\");","map":{"version":3,"names":["MailchimpSubscribe","Newsletter","MailchimpForm","postUrl","process","env","REACT_APP_MAILCHIMP_URL","REACT_APP_MAILCHIMP_U","REACT_APP_MAILCHIMP_ID","subscribe","status","message","formData"],"sources":["F:/conda/nft_tickets/nft-boneboss/src/components/MailchimpForm.js"],"sourcesContent":["import MailchimpSubscribe from \"react-mailchimp-subscribe\";\r\nimport { Newsletter } from \"./Newsletter\";\r\n\r\nexport const MailchimpForm = () => {\r\n  const postUrl = `${process.env.REACT_APP_MAILCHIMP_URL}?u=${process.env.REACT_APP_MAILCHIMP_U}&id=${process.env.REACT_APP_MAILCHIMP_ID}`;\r\n\r\n  return (\r\n    <>\r\n      <MailchimpSubscribe\r\n        url={postUrl}\r\n        render={({ subscribe, status, message }) => (\r\n          <Newsletter\r\n            status={status}\r\n            message={message}\r\n            onValidated={formData => subscribe(formData)}\r\n            />\r\n        )}\r\n        />\r\n    </>\r\n  )\r\n}\r\n"],"mappings":";AAAA,OAAOA,kBAAkB,MAAM,2BAA2B;AAC1D,SAASC,UAAU,QAAQ,cAAc;AAAC;AAAA;AAE1C,OAAO,MAAMC,aAAa,GAAG,MAAM;EACjC,MAAMC,OAAO,GAAI,GAAEC,OAAO,CAACC,GAAG,CAACC,uBAAwB,MAAKF,OAAO,CAACC,GAAG,CAACE,qBAAsB,OAAMH,OAAO,CAACC,GAAG,CAACG,sBAAuB,EAAC;EAExI,oBACE;IAAA,uBACE,QAAC,kBAAkB;MACjB,GAAG,EAAEL,OAAQ;MACb,MAAM,EAAE;QAAA,IAAC;UAAEM,SAAS;UAAEC,MAAM;UAAEC;QAAQ,CAAC;QAAA,oBACrC,QAAC,UAAU;UACT,MAAM,EAAED,MAAO;UACf,OAAO,EAAEC,OAAQ;UACjB,WAAW,EAAEC,QAAQ,IAAIH,SAAS,CAACG,QAAQ;QAAE;UAAA;UAAA;UAAA;QAAA,QAC3C;MAAA;IACJ;MAAA;MAAA;MAAA;IAAA;EACA,iBACH;AAEP,CAAC;AAAA,KAjBYV,aAAa;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}