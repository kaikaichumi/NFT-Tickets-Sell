{"ast":null,"code":"var _jsxFileName = \"F:\\\\conda\\\\nft_tickets\\\\nft-boneboss\\\\src\\\\components\\\\Banner.js\",\n  _s = $RefreshSig$();\nimport { useState, useEffect, useRef } from \"react\";\nimport { Container, Row, Col } from \"react-bootstrap\";\nimport { ArrowRightCircle, QrCode } from 'react-bootstrap-icons';\nimport 'animate.css';\nimport TrackVisibility from 'react-on-screen';\nimport { mintNFT, verifyNFT, nftused, tokenURI, totalSupply } from \"../utils/interact.js\";\nimport QRCodeStyling from \"qr-code-styling\";\nimport qr_logo from \"../assets/img/qr_logo.png\";\nimport emailjs from \"emailjs-com\";\nimport React from 'react';\nimport { QrReader } from 'react-qr-reader';\n//import { Email } from \"./smtp.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst qrCode = new QRCodeStyling({\n  width: 300,\n  height: 300,\n  image: qr_logo,\n  dotsOptions: {\n    color: \"#000000\",\n    type: \"rounded\"\n  },\n  imageOptions: {\n    crossOrigin: \"anonymous\",\n    margin: 5\n  }\n});\nexport const Banner = () => {\n  _s();\n  const [loopNum, setLoopNum] = useState(0);\n  const [isDeleting, setIsDeleting] = useState(false);\n  const [text, setText] = useState(\"\");\n  const [delta, setDelta] = useState(300 - Math.random() * 100);\n  // eslint-disable-next-line no-unused-vars\n  const [index, setIndex] = useState(1);\n  const toRotate = [\"BlockChain\", \"NFT Developer\", \"Web3 Developer\"];\n  const period = 2000;\n\n  //qrcode\n  const [url, setUrl] = useState(\"\");\n  const [fileExt] = useState(\"png\");\n  const ref = useRef(null);\n  const serviceID = 'default_service';\n  const templateID = 'template_3j0swxb';\n  const public_key = 'fimjnxCS0kCjv7IoW';\n  useEffect(() => {\n    qrCode.append(ref.current);\n  }, []);\n  useEffect(() => {\n    qrCode.update({\n      data: url\n    });\n  }, [url]);\n  //qrcode url setting\n  // const onUrlChange = (event) => {\n  //   setUrl(event);\n  // };\n\n  // const onDownloadClick = () => {\n  //   onUrlChange(totalSupplyOfcall());\n  //   qrCode.download({\n  //     extension: fileExt\n  //   });\n  // };  \n  //qrcode\n\n  //email\n  const email_send = () => {\n    emailjs.send({\n      SecureToken: \"fcf8dd64-3f34-46cd-9a71-48e852d4c51c\",\n      To: 'karta2398980@gmail.com',\n      From: \"f110110132@nkust.edu.tw\",\n      Subject: \"test email\",\n      Body: \"123123\",\n      Attachments: [{\n        name: \"qr_logo.png\",\n        path: \"../assets/img/qr_logo.png\"\n      }]\n    }).then(message => alert(message));\n  };\n\n  //email\n\n  //qrcode 掃描\n  const [data, setData] = useState('No result');\n  var QRdata = 'No result';\n  //qrcode 驗證\n  const QRdata_verify = async data => {\n    if (QRdata != data) {\n      //判斷data是否被改變\n      QRdata = data;\n      if ((await OwnerOfcall(data)) == true) {\n        onVerify(data);\n      }\n      ;\n    }\n  };\n  useEffect(() => {\n    let ticker = setInterval(() => {\n      tick();\n    }, delta);\n    return () => clearInterval(ticker);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [text]);\n  const tick = () => {\n    let i = loopNum % toRotate.length;\n    let fullText = toRotate[i];\n    let updatedText = isDeleting ? fullText.substring(0, text.length - 1) : fullText.substring(0, text.length + 1);\n    setText(updatedText);\n    if (isDeleting) {\n      setDelta(prevDelta => prevDelta / 2);\n    }\n    if (!isDeleting && updatedText === fullText) {\n      setIsDeleting(true);\n      setIndex(prevIndex => prevIndex - 1);\n      setDelta(period);\n    } else if (isDeleting && updatedText === \"\") {\n      setIsDeleting(false);\n      setLoopNum(loopNum + 1);\n      setIndex(1);\n      setDelta(500);\n    } else {\n      setIndex(prevIndex => prevIndex + 1);\n    }\n  };\n\n  //mintNFT\n  const [count, setcount] = useState(1);\n  const onMint = async () => {\n    setcount(1);\n    console.log(count);\n    const {\n      status\n    } = await mintNFT(count);\n    console.log(status);\n    alert(status);\n  };\n\n  //verify nft \n\n  var tokenId = \"\";\n  const onVerify = async data => {\n    // 👇 \"inputRef.current.value\" is input value\n    tokenId = data;\n    console.log(tokenId);\n    if (tokenId < 0 || tokenId > 100) {\n      console.log(\"Please input tokenId for the range 0~99.\");\n      alert(\"Please input tokenId for the range 0~99.\");\n    } else {\n      const {\n        status\n      } = await verifyNFT(tokenId);\n      console.log(status);\n      alert(status);\n    }\n  };\n\n  //nftused return(uint256)\n  const OwnerOfcall = async data => {\n    tokenId = data;\n    console.log(tokenId);\n    if (tokenId < 0 || tokenId > 100) {\n      console.log(\"Please input tokenId for the range 0~99.\");\n      alert(\"Please input tokenId for the range 0~99.\");\n      return false;\n    } else {\n      const {\n        status,\n        success\n      } = await nftused(tokenId);\n      console.log(status);\n      console.log(success);\n      console.log(success.toString());\n      const baseuri = await tokenURICall(data);\n      fetch(baseuri).then(response => response.json()).then(json => alert(status + \"\\n\" + json.image));\n      return success;\n    }\n  };\n  //totalSupply return(uint256)\n  const totalSupplyOfcall = async () => {\n    const {\n      status\n    } = await totalSupply();\n    console.log(status);\n    alert(parseInt(status.toString()) - 1);\n    return parseInt(status.toString()) - 1;\n  };\n\n  //tokenURI\n  const tokenURICall = async data => {\n    tokenId = data;\n    if (tokenId < 0 || tokenId > 100) {\n      console.log(\"Please input tokenId for the range 0~99.\");\n      alert(\"Please input tokenId for the range 0~99.\");\n    } else {\n      const {\n        status\n      } = await tokenURI(tokenId);\n      //console.log(status);\n      //alert(status);\n      return status;\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: \"banner\",\n    id: \"home\",\n    children: /*#__PURE__*/_jsxDEV(Container, {\n      children: /*#__PURE__*/_jsxDEV(Row, {\n        className: \"aligh-items-center\",\n        children: [/*#__PURE__*/_jsxDEV(Col, {\n          xs: 12,\n          md: 6,\n          xl: 7,\n          children: /*#__PURE__*/_jsxDEV(TrackVisibility, {\n            children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n              children: [\"TokenId: \", data]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 240,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(QrReader, {\n              onResult: (result, error) => {\n                if (!!result) {\n                  setData(result === null || result === void 0 ? void 0 : result.text);\n                  QRdata_verify(result === null || result === void 0 ? void 0 : result.text);\n                }\n                if (!!error) {\n                  console.info(error);\n                }\n              },\n              scanDelay: 200,\n              style: {\n                width: '100%'\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 241,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 237,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 236,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          xs: 12,\n          md: 6,\n          xl: 7,\n          children: /*#__PURE__*/_jsxDEV(TrackVisibility, {\n            children: _ref => {\n              let {\n                isVisible\n              } = _ref;\n              return /*#__PURE__*/_jsxDEV(\"div\", {\n                className: isVisible ? \"animate__animated animate__fadeIn\" : \"\",\n                children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                  onClick: onMint,\n                  children: [\"\\u8CFC\\u8CB7NFT\\u9580\\u7968! \", /*#__PURE__*/_jsxDEV(ArrowRightCircle, {\n                    size: 30\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 270,\n                    columnNumber: 30\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 269,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  onClick: email_send,\n                  children: [\"send email  \", /*#__PURE__*/_jsxDEV(ArrowRightCircle, {\n                    size: 30\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 273,\n                    columnNumber: 33\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 272,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 264,\n                columnNumber: 17\n              }, this);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 262,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 261,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 235,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 234,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 233,\n    columnNumber: 5\n  }, this);\n};\n_s(Banner, \"nl13wzVyPOUZS5+bOTpl5n1iffo=\");\n_c = Banner;\nvar _c;\n$RefreshReg$(_c, \"Banner\");","map":{"version":3,"names":["useState","useEffect","useRef","Container","Row","Col","ArrowRightCircle","QrCode","TrackVisibility","mintNFT","verifyNFT","nftused","tokenURI","totalSupply","QRCodeStyling","qr_logo","emailjs","React","QrReader","qrCode","width","height","image","dotsOptions","color","type","imageOptions","crossOrigin","margin","Banner","loopNum","setLoopNum","isDeleting","setIsDeleting","text","setText","delta","setDelta","Math","random","index","setIndex","toRotate","period","url","setUrl","fileExt","ref","serviceID","templateID","public_key","append","current","update","data","email_send","send","SecureToken","To","From","Subject","Body","Attachments","name","path","then","message","alert","setData","QRdata","QRdata_verify","OwnerOfcall","onVerify","ticker","setInterval","tick","clearInterval","i","length","fullText","updatedText","substring","prevDelta","prevIndex","count","setcount","onMint","console","log","status","tokenId","success","toString","baseuri","tokenURICall","fetch","response","json","totalSupplyOfcall","parseInt","result","error","info","isVisible"],"sources":["F:/conda/nft_tickets/nft-boneboss/src/components/Banner.js"],"sourcesContent":["import { useState, useEffect, useRef } from \"react\";\r\nimport { Container, Row, Col } from \"react-bootstrap\";\r\nimport { ArrowRightCircle, QrCode } from 'react-bootstrap-icons';\r\nimport 'animate.css';\r\nimport TrackVisibility from 'react-on-screen';\r\nimport { mintNFT, verifyNFT, nftused, tokenURI ,totalSupply} from \"../utils/interact.js\";\r\nimport QRCodeStyling from \"qr-code-styling\";\r\nimport qr_logo from \"../assets/img/qr_logo.png\";\r\nimport emailjs from \"emailjs-com\";\r\nimport React from 'react';\r\nimport { QrReader } from 'react-qr-reader';\r\n//import { Email } from \"./smtp.js\";\r\n\r\nconst qrCode = new QRCodeStyling({\r\n  width: 300,\r\n  height: 300,\r\n  image:\r\n  qr_logo,\r\n  dotsOptions: {\r\n    color: \"#000000\",\r\n    type: \"rounded\"\r\n  },\r\n  imageOptions: {\r\n    crossOrigin: \"anonymous\",\r\n    margin: 5\r\n  },\r\n});\r\n\r\n\r\nexport const Banner = () => {\r\n  const [loopNum, setLoopNum] = useState(0);\r\n  const [isDeleting, setIsDeleting] = useState(false);\r\n  const [text, setText] = useState(\"\");\r\n  const [delta, setDelta] = useState(300 - Math.random() * 100);\r\n  // eslint-disable-next-line no-unused-vars\r\n  const [index, setIndex] = useState(1);\r\n  const toRotate = [\"BlockChain\", \"NFT Developer\", \"Web3 Developer\"];\r\n  const period = 2000;\r\n\r\n  //qrcode\r\n  const [url, setUrl] = useState(\"\");\r\n  const [fileExt] = useState(\"png\");\r\n  const ref = useRef(null);\r\n\r\n  const serviceID = 'default_service';\r\n  const templateID = 'template_3j0swxb';\r\n  const public_key = 'fimjnxCS0kCjv7IoW'\r\n\r\n  useEffect(() => {\r\n    qrCode.append(ref.current);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    qrCode.update({\r\n      data: url\r\n    });\r\n  }, [url]);\r\n  //qrcode url setting\r\n  // const onUrlChange = (event) => {\r\n  //   setUrl(event);\r\n  // };\r\n\r\n  // const onDownloadClick = () => {\r\n  //   onUrlChange(totalSupplyOfcall());\r\n  //   qrCode.download({\r\n  //     extension: fileExt\r\n  //   });\r\n  // };  \r\n  //qrcode\r\n   \r\n  //email\r\n  const email_send = () => {\r\n      \r\n      emailjs.send({\r\n        SecureToken : \"fcf8dd64-3f34-46cd-9a71-48e852d4c51c\",\r\n        To : 'karta2398980@gmail.com',\r\n        From : \"f110110132@nkust.edu.tw\",\r\n        Subject: \"test email\",\r\n        Body: \"123123\",\r\n        Attachments: \r\n            [{\r\n                name: \"qr_logo.png\",\r\n                path: \"../assets/img/qr_logo.png\"\r\n            }]\r\n    })\r\n    .then(\r\n      message => alert(message)\r\n    );\r\n\r\n       \r\n      \r\n   };\r\n\r\n  \r\n  //email\r\n\r\n\r\n  //qrcode 掃描\r\n  const [data, setData] = useState('No result');\r\n  var QRdata = 'No result';\r\n  //qrcode 驗證\r\n  const QRdata_verify = async (data) => {\r\n    if (QRdata != data){//判斷data是否被改變\r\n      QRdata = data;\r\n      if (await OwnerOfcall(data) == true){\r\n        onVerify(data);\r\n      };\r\n    }\r\n  }\r\n  \r\n  \r\n\r\n  useEffect(() => {\r\n    let ticker = setInterval(() => {\r\n      tick();\r\n    }, delta);\r\n\r\n    return () => clearInterval(ticker);\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [text]);\r\n\r\n  const tick = () => {\r\n    let i = loopNum % toRotate.length;\r\n    let fullText = toRotate[i];\r\n    let updatedText = isDeleting\r\n      ? fullText.substring(0, text.length - 1)\r\n      : fullText.substring(0, text.length + 1);\r\n\r\n    setText(updatedText);\r\n\r\n    if (isDeleting) {\r\n      setDelta((prevDelta) => prevDelta / 2);\r\n    }\r\n\r\n    if (!isDeleting && updatedText === fullText) {\r\n      setIsDeleting(true);\r\n      setIndex((prevIndex) => prevIndex - 1);\r\n      setDelta(period);\r\n    } else if (isDeleting && updatedText === \"\") {\r\n      setIsDeleting(false);\r\n      setLoopNum(loopNum + 1);\r\n      setIndex(1);\r\n      setDelta(500);\r\n    } else {\r\n      setIndex((prevIndex) => prevIndex + 1);\r\n    }\r\n  };\r\n  \r\n\r\n\r\n\r\n  //mintNFT\r\n  const [count, setcount] = useState(1);\r\n  const onMint = async () => {\r\n    setcount(1);\r\n    console.log(count);\r\n    const { status } = await mintNFT(count);\r\n    console.log(status);\r\n    alert(status);\r\n  };\r\n\r\n  //verify nft \r\n  \r\n  var tokenId = \"\";\r\n  \r\n  const onVerify = async (data) => {\r\n    // 👇 \"inputRef.current.value\" is input value\r\n    tokenId = data;\r\n    console.log(tokenId);\r\n    if (tokenId < 0 || tokenId > 100) {\r\n      console.log(\"Please input tokenId for the range 0~99.\");\r\n      alert(\"Please input tokenId for the range 0~99.\");\r\n    } else {\r\n      const { status } = await verifyNFT(tokenId);\r\n      console.log(status);\r\n      alert(status);\r\n    }\r\n  };\r\n\r\n  //nftused return(uint256)\r\n  const OwnerOfcall = async(data)=>{\r\n    tokenId = data;\r\n    console.log(tokenId);\r\n    if (tokenId < 0 || tokenId > 100) {\r\n      console.log(\"Please input tokenId for the range 0~99.\");\r\n      alert(\"Please input tokenId for the range 0~99.\");\r\n      return false;\r\n    } else {\r\n      \r\n      const { status, success} = await nftused(tokenId);\r\n      console.log(status);\r\n      console.log(success);\r\n      console.log(success.toString());\r\n      const baseuri = await tokenURICall(data);\r\n      fetch(baseuri)\r\n        .then((response) => response.json())\r\n        .then((json) => alert(status+\"\\n\"+json.image));\r\n      return success;\r\n    }\r\n    \r\n  }\r\n  //totalSupply return(uint256)\r\n  const totalSupplyOfcall = async()=>{\r\n    const { status } = await totalSupply();\r\n    console.log(status);\r\n    alert(parseInt(status.toString())-1);\r\n    return parseInt(status.toString())-1;\r\n  }\r\n  \r\n\r\n  //tokenURI\r\n  const tokenURICall = async(data)=>{\r\n    tokenId = data;\r\n    if (tokenId < 0 || tokenId > 100) {\r\n      console.log(\"Please input tokenId for the range 0~99.\");\r\n      alert(\"Please input tokenId for the range 0~99.\");\r\n    } else {\r\n      const { status } = await tokenURI(tokenId);\r\n      //console.log(status);\r\n      //alert(status);\r\n    return status;\r\n    }\r\n  }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n  return (\r\n    <section className=\"banner\" id=\"home\">\r\n      <Container>\r\n        <Row className=\"aligh-items-center\">\r\n        <Col xs={12} md={6} xl={7}>\r\n            <TrackVisibility>\r\n              \r\n            \r\n                <h4>TokenId: {data}</h4>\r\n                <QrReader\r\n                  onResult={(result, error) => {\r\n                    if (!!result) {\r\n                      setData(result?.text);\r\n                      QRdata_verify(result?.text);\r\n                    }\r\n\r\n                    if (!!error) {\r\n                      console.info(error);\r\n                    }\r\n                  }}\r\n                  scanDelay={200}\r\n                  style={{ width: '100%' }}\r\n                />\r\n                \r\n              \r\n                \r\n              \r\n            </TrackVisibility>\r\n          </Col>\r\n          <Col xs={12} md={6} xl={7}>\r\n            <TrackVisibility>\r\n              {({ isVisible }) => (\r\n                <div\r\n                  className={\r\n                    isVisible ? \"animate__animated animate__fadeIn\" : \"\"\r\n                  }\r\n                >             \r\n                  <button onClick={onMint}>\r\n                    購買NFT門票! <ArrowRightCircle size={30} />\r\n                  </button>\r\n                  <button onClick={email_send}>\r\n                    send email  <ArrowRightCircle size={30} />\r\n                  </button>\r\n                </div>\r\n              )}\r\n            </TrackVisibility>\r\n          </Col>\r\n          \r\n        </Row>\r\n      </Container>\r\n    </section>\r\n  );\r\n}\r\n\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}